CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
OPTION(test "Build all tests." OFF)
OPTION(gui "Use qt to build GUI" OFF)
SET(CMAKE_CXX_FLAGS "-g -Wall")
PROJECT(HangMan)
#ADD_SUBDIRECTORY(src)
SET(COMMON_INCLUDES ${PROJECT_SOURCE_DIR}/include/)
#FILE(GLOB SOURCES "src/*.cpp")
FILE(GLOB TESTS "test/*.cpp")
#ADD_TEST(HangManTest ${TESTS})
ADD_EXECUTABLE(HangMan src/main.cpp src/HangMan.cpp src/Man.cpp)
IF (test)
  ENABLE_TESTING()
  FIND_PACKAGE(GTest REQUIRED)
  INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS} ${COMMON_INCLUDES})
  ADD_EXECUTABLE(runUnitTests ${TESTS} ${SOURCES})
  TARGET_LINK_LIBRARIES(runUnitTests gtest gtest_main)
  ADD_TEST(test1 runUnitTests)
ENDIF()
IF (gui)
  SET(CMAKE_AUTOMOC ON)
  SET(CMAKE_INCLUDE_CURRENT_DIR ON)
  #FILE(GLOB GUI_SRC "src/*.cpp")
  SET(GUI_SRC src/HangManGUI.cpp src/HangMan.cpp src/Man.cpp)
  FIND_PACKAGE(Qt5Widgets REQUIRED)
  INCLUDE_DIRECTORIES(${Qt5Widgets_INCLUDES} ${COMMON_INCLUDES})
  ADD_DEFINITIONS(${Qt5Widgets_DEFINITIONS})
  SET(CMAKE_CXX_FLAGS "-g -Wall ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS}")
  ADD_EXECUTABLE(hm_GUI ${GUI_SRC})
  TARGET_LINK_LIBRARIES(hm_GUI ${Qt5Widgets_LIBRARIES})
ENDIF()

